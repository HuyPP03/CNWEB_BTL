version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: server_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: project_demo
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server_backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      PORT: ${PORT}
      CORS: ${CORS}
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_SECRET_MANAGER: ${JWT_SECRET_MANAGER}
      JWT_EXPIRED_IN: ${JWT_EXPIRED_IN}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_DIALECT: ${DB_DIALECT}
      DB_POOL_MAX: ${DB_POOL_MAX}
      DB_POOL_MIN: ${DB_POOL_MIN}
      DB_POOL_ACQUIRE: ${DB_POOL_ACQUIRE}
      DB_POOL_IDLE: ${DB_POOL_IDLE}
      DB_LOGGING: ${DB_LOGGING}
      DB_SYNC: ${DB_SYNC}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_PHONE: ${ADMIN_PHONE}
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: